/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  RevenueMeta,
  RevenueMeta$inboundSchema,
  RevenueMeta$Outbound,
  RevenueMeta$outboundSchema,
} from "./revenuemeta.js";
import {
  RevenueResultItem,
  RevenueResultItem$inboundSchema,
  RevenueResultItem$Outbound,
  RevenueResultItem$outboundSchema,
} from "./revenueresultitem.js";
import {
  RevenueSummary,
  RevenueSummary$inboundSchema,
  RevenueSummary$Outbound,
  RevenueSummary$outboundSchema,
} from "./revenuesummary.js";

export type GetRevenueResponseSchema = {
  summary: RevenueSummary;
  meta: RevenueMeta;
  result: Array<RevenueResultItem>;
};

/** @internal */
export const GetRevenueResponseSchema$inboundSchema: z.ZodType<
  GetRevenueResponseSchema,
  z.ZodTypeDef,
  unknown
> = z.object({
  summary: RevenueSummary$inboundSchema,
  meta: RevenueMeta$inboundSchema,
  result: z.array(RevenueResultItem$inboundSchema),
});

/** @internal */
export type GetRevenueResponseSchema$Outbound = {
  summary: RevenueSummary$Outbound;
  meta: RevenueMeta$Outbound;
  result: Array<RevenueResultItem$Outbound>;
};

/** @internal */
export const GetRevenueResponseSchema$outboundSchema: z.ZodType<
  GetRevenueResponseSchema$Outbound,
  z.ZodTypeDef,
  GetRevenueResponseSchema
> = z.object({
  summary: RevenueSummary$outboundSchema,
  meta: RevenueMeta$outboundSchema,
  result: z.array(RevenueResultItem$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetRevenueResponseSchema$ {
  /** @deprecated use `GetRevenueResponseSchema$inboundSchema` instead. */
  export const inboundSchema = GetRevenueResponseSchema$inboundSchema;
  /** @deprecated use `GetRevenueResponseSchema$outboundSchema` instead. */
  export const outboundSchema = GetRevenueResponseSchema$outboundSchema;
  /** @deprecated use `GetRevenueResponseSchema$Outbound` instead. */
  export type Outbound = GetRevenueResponseSchema$Outbound;
}

export function getRevenueResponseSchemaToJSON(
  getRevenueResponseSchema: GetRevenueResponseSchema,
): string {
  return JSON.stringify(
    GetRevenueResponseSchema$outboundSchema.parse(getRevenueResponseSchema),
  );
}

export function getRevenueResponseSchemaFromJSON(
  jsonString: string,
): SafeParseResult<GetRevenueResponseSchema, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetRevenueResponseSchema$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetRevenueResponseSchema' from JSON`,
  );
}
