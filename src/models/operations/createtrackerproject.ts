/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Current status of the project
 */
export const CreateTrackerProjectStatus = {
  InProgress: "in_progress",
  Completed: "completed",
} as const;
/**
 * Current status of the project
 */
export type CreateTrackerProjectStatus = ClosedEnum<
  typeof CreateTrackerProjectStatus
>;

export type CreateTrackerProjectTag = {
  /**
   * Unique identifier of the tag
   */
  id: string;
  /**
   * Display value of the tag
   */
  value: string;
};

/**
 * Tracker project to create
 */
export type CreateTrackerProjectRequest = {
  /**
   * Name of the project
   */
  name: string;
  /**
   * Detailed description of the project
   */
  description?: string | null | undefined;
  /**
   * Estimated total hours required to complete the project
   */
  estimate?: number | null | undefined;
  /**
   * Whether the project is billable to the customer
   */
  billable?: boolean | null | undefined;
  /**
   * Hourly rate for the project in the specified currency
   */
  rate?: number | null | undefined;
  /**
   * Currency code for the project rate in ISO 4217 format
   */
  currency?: string | null | undefined;
  /**
   * Current status of the project
   */
  status?: CreateTrackerProjectStatus | undefined;
  /**
   * Unique identifier of the customer associated with this project
   */
  customerId?: string | null | undefined;
  /**
   * Array of tags to associate with the project
   */
  tags?: Array<CreateTrackerProjectTag> | null | undefined;
};

/** @internal */
export const CreateTrackerProjectStatus$inboundSchema: z.ZodNativeEnum<
  typeof CreateTrackerProjectStatus
> = z.nativeEnum(CreateTrackerProjectStatus);

/** @internal */
export const CreateTrackerProjectStatus$outboundSchema: z.ZodNativeEnum<
  typeof CreateTrackerProjectStatus
> = CreateTrackerProjectStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateTrackerProjectStatus$ {
  /** @deprecated use `CreateTrackerProjectStatus$inboundSchema` instead. */
  export const inboundSchema = CreateTrackerProjectStatus$inboundSchema;
  /** @deprecated use `CreateTrackerProjectStatus$outboundSchema` instead. */
  export const outboundSchema = CreateTrackerProjectStatus$outboundSchema;
}

/** @internal */
export const CreateTrackerProjectTag$inboundSchema: z.ZodType<
  CreateTrackerProjectTag,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  value: z.string(),
});

/** @internal */
export type CreateTrackerProjectTag$Outbound = {
  id: string;
  value: string;
};

/** @internal */
export const CreateTrackerProjectTag$outboundSchema: z.ZodType<
  CreateTrackerProjectTag$Outbound,
  z.ZodTypeDef,
  CreateTrackerProjectTag
> = z.object({
  id: z.string(),
  value: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateTrackerProjectTag$ {
  /** @deprecated use `CreateTrackerProjectTag$inboundSchema` instead. */
  export const inboundSchema = CreateTrackerProjectTag$inboundSchema;
  /** @deprecated use `CreateTrackerProjectTag$outboundSchema` instead. */
  export const outboundSchema = CreateTrackerProjectTag$outboundSchema;
  /** @deprecated use `CreateTrackerProjectTag$Outbound` instead. */
  export type Outbound = CreateTrackerProjectTag$Outbound;
}

export function createTrackerProjectTagToJSON(
  createTrackerProjectTag: CreateTrackerProjectTag,
): string {
  return JSON.stringify(
    CreateTrackerProjectTag$outboundSchema.parse(createTrackerProjectTag),
  );
}

export function createTrackerProjectTagFromJSON(
  jsonString: string,
): SafeParseResult<CreateTrackerProjectTag, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateTrackerProjectTag$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateTrackerProjectTag' from JSON`,
  );
}

/** @internal */
export const CreateTrackerProjectRequest$inboundSchema: z.ZodType<
  CreateTrackerProjectRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  description: z.nullable(z.string()).optional(),
  estimate: z.nullable(z.number()).optional(),
  billable: z.nullable(z.boolean().default(false)),
  rate: z.nullable(z.number()).optional(),
  currency: z.nullable(z.string()).optional(),
  status: CreateTrackerProjectStatus$inboundSchema.optional(),
  customerId: z.nullable(z.string()).optional(),
  tags: z.nullable(z.array(z.lazy(() => CreateTrackerProjectTag$inboundSchema)))
    .optional(),
});

/** @internal */
export type CreateTrackerProjectRequest$Outbound = {
  name: string;
  description?: string | null | undefined;
  estimate?: number | null | undefined;
  billable: boolean | null;
  rate?: number | null | undefined;
  currency?: string | null | undefined;
  status?: string | undefined;
  customerId?: string | null | undefined;
  tags?: Array<CreateTrackerProjectTag$Outbound> | null | undefined;
};

/** @internal */
export const CreateTrackerProjectRequest$outboundSchema: z.ZodType<
  CreateTrackerProjectRequest$Outbound,
  z.ZodTypeDef,
  CreateTrackerProjectRequest
> = z.object({
  name: z.string(),
  description: z.nullable(z.string()).optional(),
  estimate: z.nullable(z.number()).optional(),
  billable: z.nullable(z.boolean().default(false)),
  rate: z.nullable(z.number()).optional(),
  currency: z.nullable(z.string()).optional(),
  status: CreateTrackerProjectStatus$outboundSchema.optional(),
  customerId: z.nullable(z.string()).optional(),
  tags: z.nullable(
    z.array(z.lazy(() => CreateTrackerProjectTag$outboundSchema)),
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateTrackerProjectRequest$ {
  /** @deprecated use `CreateTrackerProjectRequest$inboundSchema` instead. */
  export const inboundSchema = CreateTrackerProjectRequest$inboundSchema;
  /** @deprecated use `CreateTrackerProjectRequest$outboundSchema` instead. */
  export const outboundSchema = CreateTrackerProjectRequest$outboundSchema;
  /** @deprecated use `CreateTrackerProjectRequest$Outbound` instead. */
  export type Outbound = CreateTrackerProjectRequest$Outbound;
}

export function createTrackerProjectRequestToJSON(
  createTrackerProjectRequest: CreateTrackerProjectRequest,
): string {
  return JSON.stringify(
    CreateTrackerProjectRequest$outboundSchema.parse(
      createTrackerProjectRequest,
    ),
  );
}

export function createTrackerProjectRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateTrackerProjectRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateTrackerProjectRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateTrackerProjectRequest' from JSON`,
  );
}
