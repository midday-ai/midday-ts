/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteInboxItemRequest = {
  id: string;
};

/**
 * Response schema for a successfully deleted inbox item.
 */
export type DeleteInboxItemResponse = {
  /**
   * The unique identifier of the deleted inbox item.
   */
  id: string;
};

/** @internal */
export const DeleteInboxItemRequest$inboundSchema: z.ZodType<
  DeleteInboxItemRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteInboxItemRequest$Outbound = {
  id: string;
};

/** @internal */
export const DeleteInboxItemRequest$outboundSchema: z.ZodType<
  DeleteInboxItemRequest$Outbound,
  z.ZodTypeDef,
  DeleteInboxItemRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteInboxItemRequest$ {
  /** @deprecated use `DeleteInboxItemRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteInboxItemRequest$inboundSchema;
  /** @deprecated use `DeleteInboxItemRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteInboxItemRequest$outboundSchema;
  /** @deprecated use `DeleteInboxItemRequest$Outbound` instead. */
  export type Outbound = DeleteInboxItemRequest$Outbound;
}

export function deleteInboxItemRequestToJSON(
  deleteInboxItemRequest: DeleteInboxItemRequest,
): string {
  return JSON.stringify(
    DeleteInboxItemRequest$outboundSchema.parse(deleteInboxItemRequest),
  );
}

export function deleteInboxItemRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteInboxItemRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteInboxItemRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteInboxItemRequest' from JSON`,
  );
}

/** @internal */
export const DeleteInboxItemResponse$inboundSchema: z.ZodType<
  DeleteInboxItemResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteInboxItemResponse$Outbound = {
  id: string;
};

/** @internal */
export const DeleteInboxItemResponse$outboundSchema: z.ZodType<
  DeleteInboxItemResponse$Outbound,
  z.ZodTypeDef,
  DeleteInboxItemResponse
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteInboxItemResponse$ {
  /** @deprecated use `DeleteInboxItemResponse$inboundSchema` instead. */
  export const inboundSchema = DeleteInboxItemResponse$inboundSchema;
  /** @deprecated use `DeleteInboxItemResponse$outboundSchema` instead. */
  export const outboundSchema = DeleteInboxItemResponse$outboundSchema;
  /** @deprecated use `DeleteInboxItemResponse$Outbound` instead. */
  export type Outbound = DeleteInboxItemResponse$Outbound;
}

export function deleteInboxItemResponseToJSON(
  deleteInboxItemResponse: DeleteInboxItemResponse,
): string {
  return JSON.stringify(
    DeleteInboxItemResponse$outboundSchema.parse(deleteInboxItemResponse),
  );
}

export function deleteInboxItemResponseFromJSON(
  jsonString: string,
): SafeParseResult<DeleteInboxItemResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteInboxItemResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteInboxItemResponse' from JSON`,
  );
}
