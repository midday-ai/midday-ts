/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteInvoiceRequest = {
  id: string;
};

/**
 * Delete a invoice by its unique identifier for the authenticated team.
 */
export type DeleteInvoiceResponse = {
  /**
   * Unique identifier for the deleted invoice
   */
  id: string;
};

/** @internal */
export const DeleteInvoiceRequest$inboundSchema: z.ZodType<
  DeleteInvoiceRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteInvoiceRequest$Outbound = {
  id: string;
};

/** @internal */
export const DeleteInvoiceRequest$outboundSchema: z.ZodType<
  DeleteInvoiceRequest$Outbound,
  z.ZodTypeDef,
  DeleteInvoiceRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteInvoiceRequest$ {
  /** @deprecated use `DeleteInvoiceRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteInvoiceRequest$inboundSchema;
  /** @deprecated use `DeleteInvoiceRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteInvoiceRequest$outboundSchema;
  /** @deprecated use `DeleteInvoiceRequest$Outbound` instead. */
  export type Outbound = DeleteInvoiceRequest$Outbound;
}

export function deleteInvoiceRequestToJSON(
  deleteInvoiceRequest: DeleteInvoiceRequest,
): string {
  return JSON.stringify(
    DeleteInvoiceRequest$outboundSchema.parse(deleteInvoiceRequest),
  );
}

export function deleteInvoiceRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteInvoiceRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteInvoiceRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteInvoiceRequest' from JSON`,
  );
}

/** @internal */
export const DeleteInvoiceResponse$inboundSchema: z.ZodType<
  DeleteInvoiceResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteInvoiceResponse$Outbound = {
  id: string;
};

/** @internal */
export const DeleteInvoiceResponse$outboundSchema: z.ZodType<
  DeleteInvoiceResponse$Outbound,
  z.ZodTypeDef,
  DeleteInvoiceResponse
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteInvoiceResponse$ {
  /** @deprecated use `DeleteInvoiceResponse$inboundSchema` instead. */
  export const inboundSchema = DeleteInvoiceResponse$inboundSchema;
  /** @deprecated use `DeleteInvoiceResponse$outboundSchema` instead. */
  export const outboundSchema = DeleteInvoiceResponse$outboundSchema;
  /** @deprecated use `DeleteInvoiceResponse$Outbound` instead. */
  export type Outbound = DeleteInvoiceResponse$Outbound;
}

export function deleteInvoiceResponseToJSON(
  deleteInvoiceResponse: DeleteInvoiceResponse,
): string {
  return JSON.stringify(
    DeleteInvoiceResponse$outboundSchema.parse(deleteInvoiceResponse),
  );
}

export function deleteInvoiceResponseFromJSON(
  jsonString: string,
): SafeParseResult<DeleteInvoiceResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteInvoiceResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteInvoiceResponse' from JSON`,
  );
}
