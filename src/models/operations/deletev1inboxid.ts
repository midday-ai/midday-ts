/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteV1InboxIdRequest = {
  id: string;
};

/**
 * Response schema for a successfully deleted inbox item.
 */
export type DeleteV1InboxIdResponse = {
  /**
   * The unique identifier of the deleted inbox item.
   */
  id: string;
};

/** @internal */
export const DeleteV1InboxIdRequest$inboundSchema: z.ZodType<
  DeleteV1InboxIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteV1InboxIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const DeleteV1InboxIdRequest$outboundSchema: z.ZodType<
  DeleteV1InboxIdRequest$Outbound,
  z.ZodTypeDef,
  DeleteV1InboxIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteV1InboxIdRequest$ {
  /** @deprecated use `DeleteV1InboxIdRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteV1InboxIdRequest$inboundSchema;
  /** @deprecated use `DeleteV1InboxIdRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteV1InboxIdRequest$outboundSchema;
  /** @deprecated use `DeleteV1InboxIdRequest$Outbound` instead. */
  export type Outbound = DeleteV1InboxIdRequest$Outbound;
}

export function deleteV1InboxIdRequestToJSON(
  deleteV1InboxIdRequest: DeleteV1InboxIdRequest,
): string {
  return JSON.stringify(
    DeleteV1InboxIdRequest$outboundSchema.parse(deleteV1InboxIdRequest),
  );
}

export function deleteV1InboxIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteV1InboxIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteV1InboxIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteV1InboxIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteV1InboxIdResponse$inboundSchema: z.ZodType<
  DeleteV1InboxIdResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteV1InboxIdResponse$Outbound = {
  id: string;
};

/** @internal */
export const DeleteV1InboxIdResponse$outboundSchema: z.ZodType<
  DeleteV1InboxIdResponse$Outbound,
  z.ZodTypeDef,
  DeleteV1InboxIdResponse
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteV1InboxIdResponse$ {
  /** @deprecated use `DeleteV1InboxIdResponse$inboundSchema` instead. */
  export const inboundSchema = DeleteV1InboxIdResponse$inboundSchema;
  /** @deprecated use `DeleteV1InboxIdResponse$outboundSchema` instead. */
  export const outboundSchema = DeleteV1InboxIdResponse$outboundSchema;
  /** @deprecated use `DeleteV1InboxIdResponse$Outbound` instead. */
  export type Outbound = DeleteV1InboxIdResponse$Outbound;
}

export function deleteV1InboxIdResponseToJSON(
  deleteV1InboxIdResponse: DeleteV1InboxIdResponse,
): string {
  return JSON.stringify(
    DeleteV1InboxIdResponse$outboundSchema.parse(deleteV1InboxIdResponse),
  );
}

export function deleteV1InboxIdResponseFromJSON(
  jsonString: string,
): SafeParseResult<DeleteV1InboxIdResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteV1InboxIdResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteV1InboxIdResponse' from JSON`,
  );
}
