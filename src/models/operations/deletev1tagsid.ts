/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteV1TagsIdRequest = {
  id: string;
};

/** @internal */
export const DeleteV1TagsIdRequest$inboundSchema: z.ZodType<
  DeleteV1TagsIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteV1TagsIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const DeleteV1TagsIdRequest$outboundSchema: z.ZodType<
  DeleteV1TagsIdRequest$Outbound,
  z.ZodTypeDef,
  DeleteV1TagsIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteV1TagsIdRequest$ {
  /** @deprecated use `DeleteV1TagsIdRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteV1TagsIdRequest$inboundSchema;
  /** @deprecated use `DeleteV1TagsIdRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteV1TagsIdRequest$outboundSchema;
  /** @deprecated use `DeleteV1TagsIdRequest$Outbound` instead. */
  export type Outbound = DeleteV1TagsIdRequest$Outbound;
}

export function deleteV1TagsIdRequestToJSON(
  deleteV1TagsIdRequest: DeleteV1TagsIdRequest,
): string {
  return JSON.stringify(
    DeleteV1TagsIdRequest$outboundSchema.parse(deleteV1TagsIdRequest),
  );
}

export function deleteV1TagsIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteV1TagsIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteV1TagsIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteV1TagsIdRequest' from JSON`,
  );
}
