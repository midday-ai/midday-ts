/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteV1TrackerEntriesIdRequest = {
  id: string;
};

/**
 * Tracker entry deleted successfully.
 */
export type DeleteV1TrackerEntriesIdResponse = {
  /**
   * Unique identifier of the tracker entry to delete
   */
  id: string;
};

/** @internal */
export const DeleteV1TrackerEntriesIdRequest$inboundSchema: z.ZodType<
  DeleteV1TrackerEntriesIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteV1TrackerEntriesIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const DeleteV1TrackerEntriesIdRequest$outboundSchema: z.ZodType<
  DeleteV1TrackerEntriesIdRequest$Outbound,
  z.ZodTypeDef,
  DeleteV1TrackerEntriesIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteV1TrackerEntriesIdRequest$ {
  /** @deprecated use `DeleteV1TrackerEntriesIdRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteV1TrackerEntriesIdRequest$inboundSchema;
  /** @deprecated use `DeleteV1TrackerEntriesIdRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteV1TrackerEntriesIdRequest$outboundSchema;
  /** @deprecated use `DeleteV1TrackerEntriesIdRequest$Outbound` instead. */
  export type Outbound = DeleteV1TrackerEntriesIdRequest$Outbound;
}

export function deleteV1TrackerEntriesIdRequestToJSON(
  deleteV1TrackerEntriesIdRequest: DeleteV1TrackerEntriesIdRequest,
): string {
  return JSON.stringify(
    DeleteV1TrackerEntriesIdRequest$outboundSchema.parse(
      deleteV1TrackerEntriesIdRequest,
    ),
  );
}

export function deleteV1TrackerEntriesIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteV1TrackerEntriesIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteV1TrackerEntriesIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteV1TrackerEntriesIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteV1TrackerEntriesIdResponse$inboundSchema: z.ZodType<
  DeleteV1TrackerEntriesIdResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteV1TrackerEntriesIdResponse$Outbound = {
  id: string;
};

/** @internal */
export const DeleteV1TrackerEntriesIdResponse$outboundSchema: z.ZodType<
  DeleteV1TrackerEntriesIdResponse$Outbound,
  z.ZodTypeDef,
  DeleteV1TrackerEntriesIdResponse
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteV1TrackerEntriesIdResponse$ {
  /** @deprecated use `DeleteV1TrackerEntriesIdResponse$inboundSchema` instead. */
  export const inboundSchema = DeleteV1TrackerEntriesIdResponse$inboundSchema;
  /** @deprecated use `DeleteV1TrackerEntriesIdResponse$outboundSchema` instead. */
  export const outboundSchema = DeleteV1TrackerEntriesIdResponse$outboundSchema;
  /** @deprecated use `DeleteV1TrackerEntriesIdResponse$Outbound` instead. */
  export type Outbound = DeleteV1TrackerEntriesIdResponse$Outbound;
}

export function deleteV1TrackerEntriesIdResponseToJSON(
  deleteV1TrackerEntriesIdResponse: DeleteV1TrackerEntriesIdResponse,
): string {
  return JSON.stringify(
    DeleteV1TrackerEntriesIdResponse$outboundSchema.parse(
      deleteV1TrackerEntriesIdResponse,
    ),
  );
}

export function deleteV1TrackerEntriesIdResponseFromJSON(
  jsonString: string,
): SafeParseResult<DeleteV1TrackerEntriesIdResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteV1TrackerEntriesIdResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteV1TrackerEntriesIdResponse' from JSON`,
  );
}
