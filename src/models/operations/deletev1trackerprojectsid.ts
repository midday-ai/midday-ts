/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteV1TrackerProjectsIdRequest = {
  id: string;
};

/**
 * Tracker project deleted successfully.
 */
export type DeleteV1TrackerProjectsIdResponse = {
  /**
   * Unique identifier of the project to delete
   */
  id: string;
};

/** @internal */
export const DeleteV1TrackerProjectsIdRequest$inboundSchema: z.ZodType<
  DeleteV1TrackerProjectsIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteV1TrackerProjectsIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const DeleteV1TrackerProjectsIdRequest$outboundSchema: z.ZodType<
  DeleteV1TrackerProjectsIdRequest$Outbound,
  z.ZodTypeDef,
  DeleteV1TrackerProjectsIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteV1TrackerProjectsIdRequest$ {
  /** @deprecated use `DeleteV1TrackerProjectsIdRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteV1TrackerProjectsIdRequest$inboundSchema;
  /** @deprecated use `DeleteV1TrackerProjectsIdRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteV1TrackerProjectsIdRequest$outboundSchema;
  /** @deprecated use `DeleteV1TrackerProjectsIdRequest$Outbound` instead. */
  export type Outbound = DeleteV1TrackerProjectsIdRequest$Outbound;
}

export function deleteV1TrackerProjectsIdRequestToJSON(
  deleteV1TrackerProjectsIdRequest: DeleteV1TrackerProjectsIdRequest,
): string {
  return JSON.stringify(
    DeleteV1TrackerProjectsIdRequest$outboundSchema.parse(
      deleteV1TrackerProjectsIdRequest,
    ),
  );
}

export function deleteV1TrackerProjectsIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteV1TrackerProjectsIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteV1TrackerProjectsIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteV1TrackerProjectsIdRequest' from JSON`,
  );
}

/** @internal */
export const DeleteV1TrackerProjectsIdResponse$inboundSchema: z.ZodType<
  DeleteV1TrackerProjectsIdResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteV1TrackerProjectsIdResponse$Outbound = {
  id: string;
};

/** @internal */
export const DeleteV1TrackerProjectsIdResponse$outboundSchema: z.ZodType<
  DeleteV1TrackerProjectsIdResponse$Outbound,
  z.ZodTypeDef,
  DeleteV1TrackerProjectsIdResponse
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteV1TrackerProjectsIdResponse$ {
  /** @deprecated use `DeleteV1TrackerProjectsIdResponse$inboundSchema` instead. */
  export const inboundSchema = DeleteV1TrackerProjectsIdResponse$inboundSchema;
  /** @deprecated use `DeleteV1TrackerProjectsIdResponse$outboundSchema` instead. */
  export const outboundSchema =
    DeleteV1TrackerProjectsIdResponse$outboundSchema;
  /** @deprecated use `DeleteV1TrackerProjectsIdResponse$Outbound` instead. */
  export type Outbound = DeleteV1TrackerProjectsIdResponse$Outbound;
}

export function deleteV1TrackerProjectsIdResponseToJSON(
  deleteV1TrackerProjectsIdResponse: DeleteV1TrackerProjectsIdResponse,
): string {
  return JSON.stringify(
    DeleteV1TrackerProjectsIdResponse$outboundSchema.parse(
      deleteV1TrackerProjectsIdResponse,
    ),
  );
}

export function deleteV1TrackerProjectsIdResponseFromJSON(
  jsonString: string,
): SafeParseResult<DeleteV1TrackerProjectsIdResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteV1TrackerProjectsIdResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteV1TrackerProjectsIdResponse' from JSON`,
  );
}
