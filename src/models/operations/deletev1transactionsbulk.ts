/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeleteV1TransactionsBulkResponse = {
  /**
   * Transaction ID (UUID).
   */
  id: string;
};

/** @internal */
export const DeleteV1TransactionsBulkResponse$inboundSchema: z.ZodType<
  DeleteV1TransactionsBulkResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type DeleteV1TransactionsBulkResponse$Outbound = {
  id: string;
};

/** @internal */
export const DeleteV1TransactionsBulkResponse$outboundSchema: z.ZodType<
  DeleteV1TransactionsBulkResponse$Outbound,
  z.ZodTypeDef,
  DeleteV1TransactionsBulkResponse
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteV1TransactionsBulkResponse$ {
  /** @deprecated use `DeleteV1TransactionsBulkResponse$inboundSchema` instead. */
  export const inboundSchema = DeleteV1TransactionsBulkResponse$inboundSchema;
  /** @deprecated use `DeleteV1TransactionsBulkResponse$outboundSchema` instead. */
  export const outboundSchema = DeleteV1TransactionsBulkResponse$outboundSchema;
  /** @deprecated use `DeleteV1TransactionsBulkResponse$Outbound` instead. */
  export type Outbound = DeleteV1TransactionsBulkResponse$Outbound;
}

export function deleteV1TransactionsBulkResponseToJSON(
  deleteV1TransactionsBulkResponse: DeleteV1TransactionsBulkResponse,
): string {
  return JSON.stringify(
    DeleteV1TransactionsBulkResponse$outboundSchema.parse(
      deleteV1TransactionsBulkResponse,
    ),
  );
}

export function deleteV1TransactionsBulkResponseFromJSON(
  jsonString: string,
): SafeParseResult<DeleteV1TransactionsBulkResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteV1TransactionsBulkResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteV1TransactionsBulkResponse' from JSON`,
  );
}
