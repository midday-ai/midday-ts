/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetExpensesMetricsRequest = {
  from: string;
  to: string;
  currency?: string | undefined;
};

/** @internal */
export const GetExpensesMetricsRequest$inboundSchema: z.ZodType<
  GetExpensesMetricsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  from: z.string(),
  to: z.string(),
  currency: z.string().optional(),
});

/** @internal */
export type GetExpensesMetricsRequest$Outbound = {
  from: string;
  to: string;
  currency?: string | undefined;
};

/** @internal */
export const GetExpensesMetricsRequest$outboundSchema: z.ZodType<
  GetExpensesMetricsRequest$Outbound,
  z.ZodTypeDef,
  GetExpensesMetricsRequest
> = z.object({
  from: z.string(),
  to: z.string(),
  currency: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetExpensesMetricsRequest$ {
  /** @deprecated use `GetExpensesMetricsRequest$inboundSchema` instead. */
  export const inboundSchema = GetExpensesMetricsRequest$inboundSchema;
  /** @deprecated use `GetExpensesMetricsRequest$outboundSchema` instead. */
  export const outboundSchema = GetExpensesMetricsRequest$outboundSchema;
  /** @deprecated use `GetExpensesMetricsRequest$Outbound` instead. */
  export type Outbound = GetExpensesMetricsRequest$Outbound;
}

export function getExpensesMetricsRequestToJSON(
  getExpensesMetricsRequest: GetExpensesMetricsRequest,
): string {
  return JSON.stringify(
    GetExpensesMetricsRequest$outboundSchema.parse(getExpensesMetricsRequest),
  );
}

export function getExpensesMetricsRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetExpensesMetricsRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetExpensesMetricsRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetExpensesMetricsRequest' from JSON`,
  );
}
