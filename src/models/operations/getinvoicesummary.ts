/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Filter summary by invoice status
 */
export const GetInvoiceSummaryStatus = {
  Draft: "draft",
  Overdue: "overdue",
  Paid: "paid",
  Unpaid: "unpaid",
  Canceled: "canceled",
} as const;
/**
 * Filter summary by invoice status
 */
export type GetInvoiceSummaryStatus = ClosedEnum<
  typeof GetInvoiceSummaryStatus
>;

export type GetInvoiceSummaryRequest = {
  /**
   * Filter summary by invoice status
   */
  status?: GetInvoiceSummaryStatus | undefined;
};

export type GetInvoiceSummaryResponse = {
  /**
   * Currency of the invoice
   */
  currency: string;
  /**
   * Total amount of the invoice
   */
  totalAmount: number;
  /**
   * Number of invoices for this currency
   */
  invoiceCount: number;
};

/** @internal */
export const GetInvoiceSummaryStatus$inboundSchema: z.ZodNativeEnum<
  typeof GetInvoiceSummaryStatus
> = z.nativeEnum(GetInvoiceSummaryStatus);

/** @internal */
export const GetInvoiceSummaryStatus$outboundSchema: z.ZodNativeEnum<
  typeof GetInvoiceSummaryStatus
> = GetInvoiceSummaryStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetInvoiceSummaryStatus$ {
  /** @deprecated use `GetInvoiceSummaryStatus$inboundSchema` instead. */
  export const inboundSchema = GetInvoiceSummaryStatus$inboundSchema;
  /** @deprecated use `GetInvoiceSummaryStatus$outboundSchema` instead. */
  export const outboundSchema = GetInvoiceSummaryStatus$outboundSchema;
}

/** @internal */
export const GetInvoiceSummaryRequest$inboundSchema: z.ZodType<
  GetInvoiceSummaryRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: GetInvoiceSummaryStatus$inboundSchema.optional(),
});

/** @internal */
export type GetInvoiceSummaryRequest$Outbound = {
  status?: string | undefined;
};

/** @internal */
export const GetInvoiceSummaryRequest$outboundSchema: z.ZodType<
  GetInvoiceSummaryRequest$Outbound,
  z.ZodTypeDef,
  GetInvoiceSummaryRequest
> = z.object({
  status: GetInvoiceSummaryStatus$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetInvoiceSummaryRequest$ {
  /** @deprecated use `GetInvoiceSummaryRequest$inboundSchema` instead. */
  export const inboundSchema = GetInvoiceSummaryRequest$inboundSchema;
  /** @deprecated use `GetInvoiceSummaryRequest$outboundSchema` instead. */
  export const outboundSchema = GetInvoiceSummaryRequest$outboundSchema;
  /** @deprecated use `GetInvoiceSummaryRequest$Outbound` instead. */
  export type Outbound = GetInvoiceSummaryRequest$Outbound;
}

export function getInvoiceSummaryRequestToJSON(
  getInvoiceSummaryRequest: GetInvoiceSummaryRequest,
): string {
  return JSON.stringify(
    GetInvoiceSummaryRequest$outboundSchema.parse(getInvoiceSummaryRequest),
  );
}

export function getInvoiceSummaryRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetInvoiceSummaryRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetInvoiceSummaryRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetInvoiceSummaryRequest' from JSON`,
  );
}

/** @internal */
export const GetInvoiceSummaryResponse$inboundSchema: z.ZodType<
  GetInvoiceSummaryResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  currency: z.string(),
  totalAmount: z.number(),
  invoiceCount: z.number(),
});

/** @internal */
export type GetInvoiceSummaryResponse$Outbound = {
  currency: string;
  totalAmount: number;
  invoiceCount: number;
};

/** @internal */
export const GetInvoiceSummaryResponse$outboundSchema: z.ZodType<
  GetInvoiceSummaryResponse$Outbound,
  z.ZodTypeDef,
  GetInvoiceSummaryResponse
> = z.object({
  currency: z.string(),
  totalAmount: z.number(),
  invoiceCount: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetInvoiceSummaryResponse$ {
  /** @deprecated use `GetInvoiceSummaryResponse$inboundSchema` instead. */
  export const inboundSchema = GetInvoiceSummaryResponse$inboundSchema;
  /** @deprecated use `GetInvoiceSummaryResponse$outboundSchema` instead. */
  export const outboundSchema = GetInvoiceSummaryResponse$outboundSchema;
  /** @deprecated use `GetInvoiceSummaryResponse$Outbound` instead. */
  export type Outbound = GetInvoiceSummaryResponse$Outbound;
}

export function getInvoiceSummaryResponseToJSON(
  getInvoiceSummaryResponse: GetInvoiceSummaryResponse,
): string {
  return JSON.stringify(
    GetInvoiceSummaryResponse$outboundSchema.parse(getInvoiceSummaryResponse),
  );
}

export function getInvoiceSummaryResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetInvoiceSummaryResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetInvoiceSummaryResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetInvoiceSummaryResponse' from JSON`,
  );
}
