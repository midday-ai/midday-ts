/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetTagByIdRequest = {
  id: string;
};

/** @internal */
export const GetTagByIdRequest$inboundSchema: z.ZodType<
  GetTagByIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type GetTagByIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const GetTagByIdRequest$outboundSchema: z.ZodType<
  GetTagByIdRequest$Outbound,
  z.ZodTypeDef,
  GetTagByIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetTagByIdRequest$ {
  /** @deprecated use `GetTagByIdRequest$inboundSchema` instead. */
  export const inboundSchema = GetTagByIdRequest$inboundSchema;
  /** @deprecated use `GetTagByIdRequest$outboundSchema` instead. */
  export const outboundSchema = GetTagByIdRequest$outboundSchema;
  /** @deprecated use `GetTagByIdRequest$Outbound` instead. */
  export type Outbound = GetTagByIdRequest$Outbound;
}

export function getTagByIdRequestToJSON(
  getTagByIdRequest: GetTagByIdRequest,
): string {
  return JSON.stringify(
    GetTagByIdRequest$outboundSchema.parse(getTagByIdRequest),
  );
}

export function getTagByIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetTagByIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetTagByIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetTagByIdRequest' from JSON`,
  );
}
