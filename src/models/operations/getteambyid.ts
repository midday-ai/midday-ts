/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetTeamByIdRequest = {
  id: string;
};

/**
 * Current subscription plan of the team
 */
export const GetTeamByIdPlan = {
  Trial: "trial",
  Starter: "starter",
  Pro: "pro",
} as const;
/**
 * Current subscription plan of the team
 */
export type GetTeamByIdPlan = ClosedEnum<typeof GetTeamByIdPlan>;

/**
 * Team details
 */
export type GetTeamByIdResponse = {
  /**
   * Unique identifier of the team
   */
  id: string;
  /**
   * Name of the team or organization
   */
  name: string;
  /**
   * URL to the team's logo image
   */
  logoUrl: string | null;
  /**
   * Current subscription plan of the team
   */
  plan: GetTeamByIdPlan;
};

/** @internal */
export const GetTeamByIdRequest$inboundSchema: z.ZodType<
  GetTeamByIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type GetTeamByIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const GetTeamByIdRequest$outboundSchema: z.ZodType<
  GetTeamByIdRequest$Outbound,
  z.ZodTypeDef,
  GetTeamByIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetTeamByIdRequest$ {
  /** @deprecated use `GetTeamByIdRequest$inboundSchema` instead. */
  export const inboundSchema = GetTeamByIdRequest$inboundSchema;
  /** @deprecated use `GetTeamByIdRequest$outboundSchema` instead. */
  export const outboundSchema = GetTeamByIdRequest$outboundSchema;
  /** @deprecated use `GetTeamByIdRequest$Outbound` instead. */
  export type Outbound = GetTeamByIdRequest$Outbound;
}

export function getTeamByIdRequestToJSON(
  getTeamByIdRequest: GetTeamByIdRequest,
): string {
  return JSON.stringify(
    GetTeamByIdRequest$outboundSchema.parse(getTeamByIdRequest),
  );
}

export function getTeamByIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetTeamByIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetTeamByIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetTeamByIdRequest' from JSON`,
  );
}

/** @internal */
export const GetTeamByIdPlan$inboundSchema: z.ZodNativeEnum<
  typeof GetTeamByIdPlan
> = z.nativeEnum(GetTeamByIdPlan);

/** @internal */
export const GetTeamByIdPlan$outboundSchema: z.ZodNativeEnum<
  typeof GetTeamByIdPlan
> = GetTeamByIdPlan$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetTeamByIdPlan$ {
  /** @deprecated use `GetTeamByIdPlan$inboundSchema` instead. */
  export const inboundSchema = GetTeamByIdPlan$inboundSchema;
  /** @deprecated use `GetTeamByIdPlan$outboundSchema` instead. */
  export const outboundSchema = GetTeamByIdPlan$outboundSchema;
}

/** @internal */
export const GetTeamByIdResponse$inboundSchema: z.ZodType<
  GetTeamByIdResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  name: z.string(),
  logoUrl: z.nullable(z.string()),
  plan: GetTeamByIdPlan$inboundSchema,
});

/** @internal */
export type GetTeamByIdResponse$Outbound = {
  id: string;
  name: string;
  logoUrl: string | null;
  plan: string;
};

/** @internal */
export const GetTeamByIdResponse$outboundSchema: z.ZodType<
  GetTeamByIdResponse$Outbound,
  z.ZodTypeDef,
  GetTeamByIdResponse
> = z.object({
  id: z.string(),
  name: z.string(),
  logoUrl: z.nullable(z.string()),
  plan: GetTeamByIdPlan$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetTeamByIdResponse$ {
  /** @deprecated use `GetTeamByIdResponse$inboundSchema` instead. */
  export const inboundSchema = GetTeamByIdResponse$inboundSchema;
  /** @deprecated use `GetTeamByIdResponse$outboundSchema` instead. */
  export const outboundSchema = GetTeamByIdResponse$outboundSchema;
  /** @deprecated use `GetTeamByIdResponse$Outbound` instead. */
  export type Outbound = GetTeamByIdResponse$Outbound;
}

export function getTeamByIdResponseToJSON(
  getTeamByIdResponse: GetTeamByIdResponse,
): string {
  return JSON.stringify(
    GetTeamByIdResponse$outboundSchema.parse(getTeamByIdResponse),
  );
}

export function getTeamByIdResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetTeamByIdResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetTeamByIdResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetTeamByIdResponse' from JSON`,
  );
}
