/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetV1TransactionsIdRequest = {
  id: string;
};

/** @internal */
export const GetV1TransactionsIdRequest$inboundSchema: z.ZodType<
  GetV1TransactionsIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type GetV1TransactionsIdRequest$Outbound = {
  id: string;
};

/** @internal */
export const GetV1TransactionsIdRequest$outboundSchema: z.ZodType<
  GetV1TransactionsIdRequest$Outbound,
  z.ZodTypeDef,
  GetV1TransactionsIdRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV1TransactionsIdRequest$ {
  /** @deprecated use `GetV1TransactionsIdRequest$inboundSchema` instead. */
  export const inboundSchema = GetV1TransactionsIdRequest$inboundSchema;
  /** @deprecated use `GetV1TransactionsIdRequest$outboundSchema` instead. */
  export const outboundSchema = GetV1TransactionsIdRequest$outboundSchema;
  /** @deprecated use `GetV1TransactionsIdRequest$Outbound` instead. */
  export type Outbound = GetV1TransactionsIdRequest$Outbound;
}

export function getV1TransactionsIdRequestToJSON(
  getV1TransactionsIdRequest: GetV1TransactionsIdRequest,
): string {
  return JSON.stringify(
    GetV1TransactionsIdRequest$outboundSchema.parse(getV1TransactionsIdRequest),
  );
}

export function getV1TransactionsIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetV1TransactionsIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetV1TransactionsIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetV1TransactionsIdRequest' from JSON`,
  );
}
