/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

/**
 * Status of the change
 */
export const ProfitPercentageStatus = {
  Negative: "negative",
  Positive: "positive",
} as const;
/**
 * Status of the change
 */
export type ProfitPercentageStatus = ClosedEnum<typeof ProfitPercentageStatus>;

export type ProfitPercentage = {
  /**
   * Percentage change compared to previous period
   */
  value: number;
  /**
   * Status of the change
   */
  status: ProfitPercentageStatus;
};

/** @internal */
export const ProfitPercentageStatus$inboundSchema: z.ZodNativeEnum<
  typeof ProfitPercentageStatus
> = z.nativeEnum(ProfitPercentageStatus);

/** @internal */
export const ProfitPercentageStatus$outboundSchema: z.ZodNativeEnum<
  typeof ProfitPercentageStatus
> = ProfitPercentageStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProfitPercentageStatus$ {
  /** @deprecated use `ProfitPercentageStatus$inboundSchema` instead. */
  export const inboundSchema = ProfitPercentageStatus$inboundSchema;
  /** @deprecated use `ProfitPercentageStatus$outboundSchema` instead. */
  export const outboundSchema = ProfitPercentageStatus$outboundSchema;
}

/** @internal */
export const ProfitPercentage$inboundSchema: z.ZodType<
  ProfitPercentage,
  z.ZodTypeDef,
  unknown
> = z.object({
  value: z.number(),
  status: ProfitPercentageStatus$inboundSchema,
});

/** @internal */
export type ProfitPercentage$Outbound = {
  value: number;
  status: string;
};

/** @internal */
export const ProfitPercentage$outboundSchema: z.ZodType<
  ProfitPercentage$Outbound,
  z.ZodTypeDef,
  ProfitPercentage
> = z.object({
  value: z.number(),
  status: ProfitPercentageStatus$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProfitPercentage$ {
  /** @deprecated use `ProfitPercentage$inboundSchema` instead. */
  export const inboundSchema = ProfitPercentage$inboundSchema;
  /** @deprecated use `ProfitPercentage$outboundSchema` instead. */
  export const outboundSchema = ProfitPercentage$outboundSchema;
  /** @deprecated use `ProfitPercentage$Outbound` instead. */
  export type Outbound = ProfitPercentage$Outbound;
}

export function profitPercentageToJSON(
  profitPercentage: ProfitPercentage,
): string {
  return JSON.stringify(
    ProfitPercentage$outboundSchema.parse(profitPercentage),
  );
}

export function profitPercentageFromJSON(
  jsonString: string,
): SafeParseResult<ProfitPercentage, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ProfitPercentage$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ProfitPercentage' from JSON`,
  );
}
