/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  ProfitCurrent,
  ProfitCurrent$inboundSchema,
  ProfitCurrent$Outbound,
  ProfitCurrent$outboundSchema,
} from "./profitcurrent.js";
import {
  ProfitPercentage,
  ProfitPercentage$inboundSchema,
  ProfitPercentage$Outbound,
  ProfitPercentage$outboundSchema,
} from "./profitpercentage.js";
import {
  ProfitPrevious,
  ProfitPrevious$inboundSchema,
  ProfitPrevious$Outbound,
  ProfitPrevious$outboundSchema,
} from "./profitprevious.js";

export type ProfitResultItem = {
  /**
   * Date for the metric (ISO 8601)
   */
  date: string;
  percentage: ProfitPercentage;
  current: ProfitCurrent;
  previous: ProfitPrevious;
};

/** @internal */
export const ProfitResultItem$inboundSchema: z.ZodType<
  ProfitResultItem,
  z.ZodTypeDef,
  unknown
> = z.object({
  date: z.string(),
  percentage: ProfitPercentage$inboundSchema,
  current: ProfitCurrent$inboundSchema,
  previous: ProfitPrevious$inboundSchema,
});

/** @internal */
export type ProfitResultItem$Outbound = {
  date: string;
  percentage: ProfitPercentage$Outbound;
  current: ProfitCurrent$Outbound;
  previous: ProfitPrevious$Outbound;
};

/** @internal */
export const ProfitResultItem$outboundSchema: z.ZodType<
  ProfitResultItem$Outbound,
  z.ZodTypeDef,
  ProfitResultItem
> = z.object({
  date: z.string(),
  percentage: ProfitPercentage$outboundSchema,
  current: ProfitCurrent$outboundSchema,
  previous: ProfitPrevious$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProfitResultItem$ {
  /** @deprecated use `ProfitResultItem$inboundSchema` instead. */
  export const inboundSchema = ProfitResultItem$inboundSchema;
  /** @deprecated use `ProfitResultItem$outboundSchema` instead. */
  export const outboundSchema = ProfitResultItem$outboundSchema;
  /** @deprecated use `ProfitResultItem$Outbound` instead. */
  export type Outbound = ProfitResultItem$Outbound;
}

export function profitResultItemToJSON(
  profitResultItem: ProfitResultItem,
): string {
  return JSON.stringify(
    ProfitResultItem$outboundSchema.parse(profitResultItem),
  );
}

export function profitResultItemFromJSON(
  jsonString: string,
): SafeParseResult<ProfitResultItem, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ProfitResultItem$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ProfitResultItem' from JSON`,
  );
}
