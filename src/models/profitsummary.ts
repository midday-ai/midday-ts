/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type ProfitSummary = {
  /**
   * Total profit for the current period
   */
  currentTotal: number;
  /**
   * Total profit for the previous period
   */
  prevTotal: number;
  /**
   * Currency code (ISO 4217)
   */
  currency: string;
};

/** @internal */
export const ProfitSummary$inboundSchema: z.ZodType<
  ProfitSummary,
  z.ZodTypeDef,
  unknown
> = z.object({
  currentTotal: z.number(),
  prevTotal: z.number(),
  currency: z.string(),
});

/** @internal */
export type ProfitSummary$Outbound = {
  currentTotal: number;
  prevTotal: number;
  currency: string;
};

/** @internal */
export const ProfitSummary$outboundSchema: z.ZodType<
  ProfitSummary$Outbound,
  z.ZodTypeDef,
  ProfitSummary
> = z.object({
  currentTotal: z.number(),
  prevTotal: z.number(),
  currency: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProfitSummary$ {
  /** @deprecated use `ProfitSummary$inboundSchema` instead. */
  export const inboundSchema = ProfitSummary$inboundSchema;
  /** @deprecated use `ProfitSummary$outboundSchema` instead. */
  export const outboundSchema = ProfitSummary$outboundSchema;
  /** @deprecated use `ProfitSummary$Outbound` instead. */
  export type Outbound = ProfitSummary$Outbound;
}

export function profitSummaryToJSON(profitSummary: ProfitSummary): string {
  return JSON.stringify(ProfitSummary$outboundSchema.parse(profitSummary));
}

export function profitSummaryFromJSON(
  jsonString: string,
): SafeParseResult<ProfitSummary, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ProfitSummary$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ProfitSummary' from JSON`,
  );
}
