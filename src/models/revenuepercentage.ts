/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

/**
 * Status of the change
 */
export const RevenuePercentageStatus = {
  Negative: "negative",
  Positive: "positive",
} as const;
/**
 * Status of the change
 */
export type RevenuePercentageStatus = ClosedEnum<
  typeof RevenuePercentageStatus
>;

export type RevenuePercentage = {
  /**
   * Percentage change compared to previous period
   */
  value: number;
  /**
   * Status of the change
   */
  status: RevenuePercentageStatus;
};

/** @internal */
export const RevenuePercentageStatus$inboundSchema: z.ZodNativeEnum<
  typeof RevenuePercentageStatus
> = z.nativeEnum(RevenuePercentageStatus);

/** @internal */
export const RevenuePercentageStatus$outboundSchema: z.ZodNativeEnum<
  typeof RevenuePercentageStatus
> = RevenuePercentageStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RevenuePercentageStatus$ {
  /** @deprecated use `RevenuePercentageStatus$inboundSchema` instead. */
  export const inboundSchema = RevenuePercentageStatus$inboundSchema;
  /** @deprecated use `RevenuePercentageStatus$outboundSchema` instead. */
  export const outboundSchema = RevenuePercentageStatus$outboundSchema;
}

/** @internal */
export const RevenuePercentage$inboundSchema: z.ZodType<
  RevenuePercentage,
  z.ZodTypeDef,
  unknown
> = z.object({
  value: z.number(),
  status: RevenuePercentageStatus$inboundSchema,
});

/** @internal */
export type RevenuePercentage$Outbound = {
  value: number;
  status: string;
};

/** @internal */
export const RevenuePercentage$outboundSchema: z.ZodType<
  RevenuePercentage$Outbound,
  z.ZodTypeDef,
  RevenuePercentage
> = z.object({
  value: z.number(),
  status: RevenuePercentageStatus$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RevenuePercentage$ {
  /** @deprecated use `RevenuePercentage$inboundSchema` instead. */
  export const inboundSchema = RevenuePercentage$inboundSchema;
  /** @deprecated use `RevenuePercentage$outboundSchema` instead. */
  export const outboundSchema = RevenuePercentage$outboundSchema;
  /** @deprecated use `RevenuePercentage$Outbound` instead. */
  export type Outbound = RevenuePercentage$Outbound;
}

export function revenuePercentageToJSON(
  revenuePercentage: RevenuePercentage,
): string {
  return JSON.stringify(
    RevenuePercentage$outboundSchema.parse(revenuePercentage),
  );
}

export function revenuePercentageFromJSON(
  jsonString: string,
): SafeParseResult<RevenuePercentage, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => RevenuePercentage$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'RevenuePercentage' from JSON`,
  );
}
