/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type SpendingResultArray = {
  /**
   * Spending category name
   */
  name: string;
  /**
   * Spending category slug
   */
  slug: string;
  /**
   * Amount spent in this category
   */
  amount: number;
  /**
   * Currency code (ISO 4217)
   */
  currency: string;
  /**
   * Color code for the category
   */
  color: string;
  /**
   * Percentage of total spending for this category
   */
  percentage: number;
};

/** @internal */
export const SpendingResultArray$inboundSchema: z.ZodType<
  SpendingResultArray,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  slug: z.string(),
  amount: z.number(),
  currency: z.string(),
  color: z.string(),
  percentage: z.number(),
});

/** @internal */
export type SpendingResultArray$Outbound = {
  name: string;
  slug: string;
  amount: number;
  currency: string;
  color: string;
  percentage: number;
};

/** @internal */
export const SpendingResultArray$outboundSchema: z.ZodType<
  SpendingResultArray$Outbound,
  z.ZodTypeDef,
  SpendingResultArray
> = z.object({
  name: z.string(),
  slug: z.string(),
  amount: z.number(),
  currency: z.string(),
  color: z.string(),
  percentage: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SpendingResultArray$ {
  /** @deprecated use `SpendingResultArray$inboundSchema` instead. */
  export const inboundSchema = SpendingResultArray$inboundSchema;
  /** @deprecated use `SpendingResultArray$outboundSchema` instead. */
  export const outboundSchema = SpendingResultArray$outboundSchema;
  /** @deprecated use `SpendingResultArray$Outbound` instead. */
  export type Outbound = SpendingResultArray$Outbound;
}

export function spendingResultArrayToJSON(
  spendingResultArray: SpendingResultArray,
): string {
  return JSON.stringify(
    SpendingResultArray$outboundSchema.parse(spendingResultArray),
  );
}

export function spendingResultArrayFromJSON(
  jsonString: string,
): SafeParseResult<SpendingResultArray, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SpendingResultArray$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SpendingResultArray' from JSON`,
  );
}
