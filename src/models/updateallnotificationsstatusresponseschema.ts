/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  NotificationSchema,
  NotificationSchema$inboundSchema,
  NotificationSchema$Outbound,
  NotificationSchema$outboundSchema,
} from "./notificationschema.js";

export type UpdateAllNotificationsStatusResponseSchema = {
  /**
   * Array of updated notifications
   */
  data: Array<NotificationSchema>;
};

/** @internal */
export const UpdateAllNotificationsStatusResponseSchema$inboundSchema:
  z.ZodType<UpdateAllNotificationsStatusResponseSchema, z.ZodTypeDef, unknown> =
    z.object({
      data: z.array(NotificationSchema$inboundSchema),
    });

/** @internal */
export type UpdateAllNotificationsStatusResponseSchema$Outbound = {
  data: Array<NotificationSchema$Outbound>;
};

/** @internal */
export const UpdateAllNotificationsStatusResponseSchema$outboundSchema:
  z.ZodType<
    UpdateAllNotificationsStatusResponseSchema$Outbound,
    z.ZodTypeDef,
    UpdateAllNotificationsStatusResponseSchema
  > = z.object({
    data: z.array(NotificationSchema$outboundSchema),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateAllNotificationsStatusResponseSchema$ {
  /** @deprecated use `UpdateAllNotificationsStatusResponseSchema$inboundSchema` instead. */
  export const inboundSchema =
    UpdateAllNotificationsStatusResponseSchema$inboundSchema;
  /** @deprecated use `UpdateAllNotificationsStatusResponseSchema$outboundSchema` instead. */
  export const outboundSchema =
    UpdateAllNotificationsStatusResponseSchema$outboundSchema;
  /** @deprecated use `UpdateAllNotificationsStatusResponseSchema$Outbound` instead. */
  export type Outbound = UpdateAllNotificationsStatusResponseSchema$Outbound;
}

export function updateAllNotificationsStatusResponseSchemaToJSON(
  updateAllNotificationsStatusResponseSchema:
    UpdateAllNotificationsStatusResponseSchema,
): string {
  return JSON.stringify(
    UpdateAllNotificationsStatusResponseSchema$outboundSchema.parse(
      updateAllNotificationsStatusResponseSchema,
    ),
  );
}

export function updateAllNotificationsStatusResponseSchemaFromJSON(
  jsonString: string,
): SafeParseResult<
  UpdateAllNotificationsStatusResponseSchema,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateAllNotificationsStatusResponseSchema$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'UpdateAllNotificationsStatusResponseSchema' from JSON`,
  );
}
