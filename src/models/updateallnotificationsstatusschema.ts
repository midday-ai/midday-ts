/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

/**
 * The new status to apply to all notifications for the authenticated user
 */
export const UpdateAllNotificationsStatusSchemaStatus = {
  Unread: "unread",
  Read: "read",
  Archived: "archived",
} as const;
/**
 * The new status to apply to all notifications for the authenticated user
 */
export type UpdateAllNotificationsStatusSchemaStatus = ClosedEnum<
  typeof UpdateAllNotificationsStatusSchemaStatus
>;

export type UpdateAllNotificationsStatusSchema = {
  /**
   * The new status to apply to all notifications for the authenticated user
   */
  status: UpdateAllNotificationsStatusSchemaStatus;
};

/** @internal */
export const UpdateAllNotificationsStatusSchemaStatus$inboundSchema:
  z.ZodNativeEnum<typeof UpdateAllNotificationsStatusSchemaStatus> = z
    .nativeEnum(UpdateAllNotificationsStatusSchemaStatus);

/** @internal */
export const UpdateAllNotificationsStatusSchemaStatus$outboundSchema:
  z.ZodNativeEnum<typeof UpdateAllNotificationsStatusSchemaStatus> =
    UpdateAllNotificationsStatusSchemaStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateAllNotificationsStatusSchemaStatus$ {
  /** @deprecated use `UpdateAllNotificationsStatusSchemaStatus$inboundSchema` instead. */
  export const inboundSchema =
    UpdateAllNotificationsStatusSchemaStatus$inboundSchema;
  /** @deprecated use `UpdateAllNotificationsStatusSchemaStatus$outboundSchema` instead. */
  export const outboundSchema =
    UpdateAllNotificationsStatusSchemaStatus$outboundSchema;
}

/** @internal */
export const UpdateAllNotificationsStatusSchema$inboundSchema: z.ZodType<
  UpdateAllNotificationsStatusSchema,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: UpdateAllNotificationsStatusSchemaStatus$inboundSchema,
});

/** @internal */
export type UpdateAllNotificationsStatusSchema$Outbound = {
  status: string;
};

/** @internal */
export const UpdateAllNotificationsStatusSchema$outboundSchema: z.ZodType<
  UpdateAllNotificationsStatusSchema$Outbound,
  z.ZodTypeDef,
  UpdateAllNotificationsStatusSchema
> = z.object({
  status: UpdateAllNotificationsStatusSchemaStatus$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateAllNotificationsStatusSchema$ {
  /** @deprecated use `UpdateAllNotificationsStatusSchema$inboundSchema` instead. */
  export const inboundSchema = UpdateAllNotificationsStatusSchema$inboundSchema;
  /** @deprecated use `UpdateAllNotificationsStatusSchema$outboundSchema` instead. */
  export const outboundSchema =
    UpdateAllNotificationsStatusSchema$outboundSchema;
  /** @deprecated use `UpdateAllNotificationsStatusSchema$Outbound` instead. */
  export type Outbound = UpdateAllNotificationsStatusSchema$Outbound;
}

export function updateAllNotificationsStatusSchemaToJSON(
  updateAllNotificationsStatusSchema: UpdateAllNotificationsStatusSchema,
): string {
  return JSON.stringify(
    UpdateAllNotificationsStatusSchema$outboundSchema.parse(
      updateAllNotificationsStatusSchema,
    ),
  );
}

export function updateAllNotificationsStatusSchemaFromJSON(
  jsonString: string,
): SafeParseResult<UpdateAllNotificationsStatusSchema, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      UpdateAllNotificationsStatusSchema$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateAllNotificationsStatusSchema' from JSON`,
  );
}
