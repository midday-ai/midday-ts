/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { documentsDeleteV1DocumentsId } from "../funcs/documentsDeleteV1DocumentsId.js";
import { documentsGetV1Documents } from "../funcs/documentsGetV1Documents.js";
import { documentsGetV1DocumentsId } from "../funcs/documentsGetV1DocumentsId.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Documents extends ClientSDK {
  /**
   * List all documents
   *
   * @remarks
   * Retrieve a list of documents for the authenticated team.
   */
  async getV1Documents(
    request: operations.GetV1DocumentsRequest,
    options?: RequestOptions,
  ): Promise<operations.GetV1DocumentsResponse> {
    return unwrapAsync(documentsGetV1Documents(
      this,
      request,
      options,
    ));
  }

  /**
   * Retrieve a document
   *
   * @remarks
   * Retrieve a document by its unique identifier for the authenticated team.
   */
  async getV1DocumentsId(
    request: operations.GetV1DocumentsIdRequest,
    options?: RequestOptions,
  ): Promise<operations.GetV1DocumentsIdResponse> {
    return unwrapAsync(documentsGetV1DocumentsId(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete a document
   *
   * @remarks
   * Delete a document by its unique identifier for the authenticated team.
   */
  async deleteV1DocumentsId(
    request: operations.DeleteV1DocumentsIdRequest,
    options?: RequestOptions,
  ): Promise<operations.DeleteV1DocumentsIdResponse> {
    return unwrapAsync(documentsDeleteV1DocumentsId(
      this,
      request,
      options,
    ));
  }
}
