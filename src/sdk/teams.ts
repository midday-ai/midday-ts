/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { teamsGetV1Teams } from "../funcs/teamsGetV1Teams.js";
import { teamsGetV1TeamsId } from "../funcs/teamsGetV1TeamsId.js";
import { teamsGetV1TeamsIdMembers } from "../funcs/teamsGetV1TeamsIdMembers.js";
import { teamsPatchV1TeamsId } from "../funcs/teamsPatchV1TeamsId.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Teams extends ClientSDK {
  /**
   * List all teams
   *
   * @remarks
   * Retrieve a list of teams for the authenticated user.
   */
  async getV1Teams(
    options?: RequestOptions,
  ): Promise<operations.GetV1TeamsResponse> {
    return unwrapAsync(teamsGetV1Teams(
      this,
      options,
    ));
  }

  /**
   * Retrieve a team
   *
   * @remarks
   * Retrieve a team by its ID for the authenticated team.
   */
  async getV1TeamsId(
    request: operations.GetV1TeamsIdRequest,
    options?: RequestOptions,
  ): Promise<operations.GetV1TeamsIdResponse> {
    return unwrapAsync(teamsGetV1TeamsId(
      this,
      request,
      options,
    ));
  }

  /**
   * Update a team
   *
   * @remarks
   * Update a team for the authenticated workspace. If thereâ€™s no change, returns it as it is.
   */
  async patchV1TeamsId(
    request: operations.PatchV1TeamsIdRequest,
    options?: RequestOptions,
  ): Promise<operations.PatchV1TeamsIdResponse> {
    return unwrapAsync(teamsPatchV1TeamsId(
      this,
      request,
      options,
    ));
  }

  /**
   * List all team members
   *
   * @remarks
   * List all team members for the authenticated team.
   */
  async getV1TeamsIdMembers(
    request: operations.GetV1TeamsIdMembersRequest,
    options?: RequestOptions,
  ): Promise<operations.GetV1TeamsIdMembersResponse> {
    return unwrapAsync(teamsGetV1TeamsIdMembers(
      this,
      request,
      options,
    ));
  }
}
