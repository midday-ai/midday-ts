/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { usersGet } from "../funcs/usersGet.js";
import { usersUpdate } from "../funcs/usersUpdate.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Users extends ClientSDK {
  /**
   * Retrieve the current user
   *
   * @remarks
   * Retrieve the current user for the authenticated team.
   */
  async get(
    options?: RequestOptions,
  ): Promise<operations.GetCurrentUserResponse> {
    return unwrapAsync(usersGet(
      this,
      options,
    ));
  }

  /**
   * Update the current user
   *
   * @remarks
   * Update the current user for the authenticated team.
   */
  async update(
    request?: operations.UpdateCurrentUserRequest | undefined,
    options?: RequestOptions,
  ): Promise<operations.UpdateCurrentUserResponse> {
    return unwrapAsync(usersUpdate(
      this,
      request,
      options,
    ));
  }
}
